# -*- coding: utf-8 -*-
"""ClassActivationMaps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DdNrApOyVXSie9ZEnpA_NjsAJkGC8JTN
"""

from __future__ import print_function, division
from builtins import range, input

from keras.models import  Model
from keras.applications.resnet50 import ResNet50, preprocess_input, decode_predictions
from keras.preprocessing import image

import numpy as np
import scipy as sp
import matplotlib.pyplot as plt

from glob import glob

from google.colab import drive
drive.mount('/content/drive')

# DATASET LINK https://drive.google.com/file/d/1VVMwGZDcwruU1OGoKozTBSLgaZRLZoD6/view?usp=sharing
!unzip "/content/drive/My Drive/CAT SEGMENTATION.zip"

image_files = glob("CAT SEGMENTATION/CAT/*.jpg")

plt.imshow(image.load_img(np.random.choice(image_files)))
plt.show()

resnet = ResNet50(input_shape=(224, 224, 3), weights = 'imagenet', include_top=True)

resnet.summary()

activation_layer = resnet.get_layer("conv5_block3_out")

model = Model(inputs = resnet.input, outputs = activation_layer.output)

final_dense = resnet.get_layer("predictions")

W = final_dense.get_weights()[0]

img = image.load_img(np.random.choice(image_files), target_size=(224, 224))
x = preprocess_input(np.expand_dims(img, 0))
fmaps = model.predict(x)[0]

probs = resnet.predict(x)
classnames = decode_predictions(probs)[0]
print(classnames)
classname = classnames[0][1]
pred = np.argmax(probs[0])

w = W[:, pred]

cam = fmaps.dot(w)

cam = sp.ndimage.zoom(cam, (32, 32), order = 1)

f, axs = plt.subplots(1,2)

axs[0].imshow(img, alpha=0.8)
axs[0].set_title("Image")

axs[1].imshow(cam, cmap = 'jet', alpha=0.8)
axs[1].set_title("Class activation map")

plt.show()

